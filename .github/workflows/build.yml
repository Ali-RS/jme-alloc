# This is a basic workflow to help you get started with Actions

name: Build jme-alloc

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  compile-java:
    # runner images with architectures (variants)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        jdk: ['8']
        architecture: [ 'x64' ]
    name: Compile java 
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      
      - name: Compiling native code into a shared object file
        run: ./gradlew :jvm-alloc:compileJava
        
      - name: Archive byte code 
        uses: actions/upload-artifact@v3
        with:
          name: byte-code
          path: ./jvm-alloc/build/classes/java/main/

      - name: Archive jni headers
        uses: actions/upload-artifact@v3
        with:
          name: jni-headers
          path: ./native-alloc/src/main/include/

  compile-natives:
      needs: compile-java
      # runner images with architectures (variants)
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [ 'ubuntu-latest', 'macos-latest', 'windows-latest' ]
          architecture: [ 'x64', 'x86' ]
      name: Compile natives on ${{ matrix.os }}_${{ matrix.architecture }}

      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        - uses: actions/checkout@v3

        - name: Download jni headers
        - uses: actions/download-artifact@v3
          with:
            name: jni-headers

        - name: Compiling native code into a shared object file
          run: ./gradlew :native-alloc:build

        - name: Archive libjmealloc.so
          uses: actions/upload-artifact@v3
          with:
            name: libjmealloc-${{ matrix.os }}_${{ matrix.architecture }}
            path: ./native-alloc/build/
  
  assemble:
      needs: compile-natives
        # runner images with architectures (variants)
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [ 'ubuntu-latest' ]
          jdk: [8]
          architecture: [ 'x64' ]
      name: Assemble jme-alloc

      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        - uses: actions/checkout@v3

        - name: Downloading libjmealloc-ubuntu-latest_x86 
        - uses: actions/download-artifact@v3
          with:
            name: libjmealloc-ubuntu-latest_x86

        - name: Downloading libjmealloc-ubuntu-latest_x64 
        - uses: actions/download-artifact@v3
          with:
            name: libjmealloc-ubuntu-latest_x64

        - name: Downloading libjmealloc-macos-latest_x64
        - uses: actions/download-artifact@v3
          with:
            name: libjmealloc-macos-latest_x64

        - name: Downloading libjmealloc-macos-latest_x86
        - uses: actions/download-artifact@v3
          with:
            name: libjmealloc-macos-latest_x86

        - name: Downloading libjmealloc-windows-latest_x64
        - uses: actions/download-artifact@v3
          with:
            name: libjmealloc-windows-latest_x64

        - name: Downloading libjmealloc-windows-latest_x86
        - uses: actions/download-artifact@v3
          with:
            name: libjmealloc-windows-latest_x86

        - name: Downloading byte code
        - uses: actions/download-artifact@v3
          with:
            name: byte-code

        - name: Copying natives
          run: ./gradlew :native-alloc:copyNatives

        - name: Assemble 
          run: ./gradlew :jvm-alloc:assemble
  
