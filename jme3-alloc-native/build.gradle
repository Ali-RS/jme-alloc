/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample C++ project to get you started.
 * For more details take a look at the Building C++ applications and libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_cpp_projects.html
 */

plugins {
    // Apply the cpp-library plugin to add support for building C++ libraries
    id 'cpp-library'
}

final String version = "0.1-A"
final String buildDirectory="${project.rootDir}/jme3-alloc/build/classes/java/main/"
final String nativeObjects="${project.rootDir}/jme3-alloc-native/build/lib/main/debug/"

task copyNatives(type: Copy) {
    from "${nativeObjects}"
    into "${buildDirectory}"
}

task compileX86() {
    String command = "bash";
    final String[] chmod = new String[] { "chmod", "+rwx" };
    final String compileX86 = "./helper-scripts/compile-x86.sh";
    final String system = System.getProperty("os.name");
    
    if (system.equals("Windows")) {
        command += ".exe";
    }
    
    /* execute the shell script in a unix process that inheirt from the current environment */
    Runtime.getRuntime().exec(new String[] { chmod[0], chmod[1], compileX86 });
    Runtime.getRuntime().exec(new String[] { command, compileX86 });
}

library {
    privateHeaders.from file('src/include')
    publicHeaders.from file('src/include')
    source.from file('src')
    baseName = "jmealloc"

    linkage = [Linkage.STATIC, Linkage.SHARED]

    targetMachines = [
        machines.linux.x86_64, machines.linux.x86,
        machines.windows.x86, machines.windows.x86_64,
        machines.macOS.x86_64, machines.macOS.x86
    ]
} 
