/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'java-library'
}

final String version = "0.1-A"

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

tasks.withType(JavaCompile) { // compile-time options [javac <options> <sources>]
    //options.compilerArgs << '-Xlint:deprecation' // to show deprecation warnings
    options.compilerArgs << '-Xlint:unchecked'
    options.compilerArgs += ["-h", "${project.rootDir}/native-alloc/src/main/include"]
    options.encoding = 'UTF-8'
    if (JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_1_10)) {
        options.release = 8
    }
}

tasks.withType(Jar) { // assemble jar options [java -jar]
    manifest {
        attributes 'Project': 'jme-alloc',
                   'Implementation-Version': "${version}",
                   'Automatic-Module-Name': "${project.name.replace("-", ".")}",
                   'Compiled-by': JavaVersion.current()
    }
}	

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.1'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:31.1-jre'
}


